name: 'Infrastructure using Terraform'

on:
  workflow_run:
    workflows: ["Build Docker image"]
    types: [completed]
    branches:
      - main

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        working-directory: ../../infra/main

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Set Google Cloud Credentials
    - name: Set Google Cloud Credentials
      run: |
        echo "$GCP_SERVICE_ACCOUNT_AUTH" > gcp_sa_key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$(realpath gcp_sa_key.json)
      env:
        GCP_SERVICE_ACCOUNT_AUTH: ${{ secrets.GCP_SERVICE_ACCOUNT_AUTH }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.2

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: List Working Directory Contents
      run: |
        ls -l ../../infra/main


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: | 
        terraform init
    
    # Linting
    - name: Lint Terraform
      uses: actionshub/terraform-lint@main

    # Validate
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -no-color -out=./terraform_plan

    # Apply the changes
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve ./terraform_plan